/*
Copyright (c) 2014 Microsoft Mobile
 
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

// 7d65f79fec3ef6d7acadc66b4427b726e18b6fee Mon, 15 Dec 2014 15:51:49 +0100

//
// File generated by WinMDIDL version 8.00.0011
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Lumia.Imaging.idl";
import "Windows.Storage.Streams.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__lumia2Eimaging_h__)")
cpp_quote("#include \"Lumia.Imaging.h\"")
cpp_quote("#endif // !defined(__lumia2Eimaging_h__)")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Lumia
{
    namespace Imaging
    {
        typedef enum ColorMode ColorMode;

        interface IFilter;

        interface IImageConsumer;

        interface IImageProvider;

        interface IImageSize;

        typedef struct Margins Margins;
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        interface IClosable;

        typedef struct Rect Rect;

        typedef struct Size Size;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IBuffer;
        }
    }
}
namespace Lumia
{
    namespace Imaging
    {
        namespace Custom
        {
            typedef struct CustomFilterBlockParameters CustomFilterBlockParameters;

            interface ICustomEffect;

            interface ICustomEffectAdapter;

            interface ICustomEffectAdapterFactory;

            interface IDelegatingEffect;

            interface IDelegatingEffectFactory;

            interface ICustomFilterRequest;

            interface ICustomFilterResponse;

            interface ICustomFilter;

            interface ICustomFilter2;

            interface ICustomFilterSession;

            interface ICustomFilterAdapter;

            interface ICustomFilterAdapterFactory;

            interface ICustomImageSource;

            interface ICustomImageSourceAdapter;

            interface ICustomImageSourceAdapterFactory;

            interface IDelegatingImageSource;

            interface IDelegatingImageSourceFactory;

            interface IEffectGroup;

            interface IEffectGroupAdapter;

            interface IEffectGroupAdapterFactory;

            interface IDelegatingFilter;

            interface IDelegatingFilterFactory;

            runtimeclass CustomEffectAdapter;

            runtimeclass DelegatingEffect;

            runtimeclass CustomFilterAdapter;

            runtimeclass CustomImageSourceAdapter;

            runtimeclass DelegatingImageSource;

            runtimeclass EffectGroupAdapter;

            runtimeclass DelegatingFilter;
        }
    }
}

// Generic instantiations

// Type definition
namespace Lumia
{
    namespace Imaging
    {
        namespace Custom
        {
            [version(0x00000001)]
            struct CustomFilterBlockParameters
            {
                UINT32 SourceStartIndex;
                UINT16 SourcePitch;
                UINT16 X;
                UINT16 Y;
                UINT16 Width;
                UINT16 Height;
            };

            [uuid(61A84D62-E7E4-3E1E-B029-559E318C8679)]
            [version(0x00000001)]
            interface ICustomEffect : IInspectable
            {
                HRESULT LoadAsync([out] [retval] Windows.Foundation.IAsyncAction** __returnValue);
                HRESULT ProvideSourceBuffer([in] Windows.Foundation.Size imageSize, [out] [retval] Windows.Storage.Streams.IBuffer** __returnValue);
                HRESULT ProvideTargetBuffer([in] Windows.Foundation.Size imageSize, [out] [retval] Windows.Storage.Streams.IBuffer** __returnValue);
                HRESULT Process([in] Windows.Foundation.Rect rect);
            }

            [exclusiveto(Lumia.Imaging.Custom.CustomEffectAdapter)]
            [uuid(1FF2E2B8-694D-311F-9143-5FAF9DA09CE6)]
            [version(0x00000001)]
            interface ICustomEffectAdapter : IInspectable
            {
            }

            [exclusiveto(Lumia.Imaging.Custom.CustomEffectAdapter)]
            [uuid(FADC2D50-EF46-39BD-958C-BDF4D7659BEB)]
            [version(0x00000001)]
            interface ICustomEffectAdapterFactory : IInspectable
            {
                [overload("CreateInstance")] HRESULT Create([in] Lumia.Imaging.IImageProvider* outerImageProvider, [in] Lumia.Imaging.Custom.ICustomEffect* customEffect, [out] [retval] Lumia.Imaging.Custom.CustomEffectAdapter** __returnValue);
                [overload("CreateInstance")] HRESULT CreateWithSource([in] Lumia.Imaging.IImageProvider* outerImageProvider, [in] Lumia.Imaging.Custom.ICustomEffect* customEffect, [in] Lumia.Imaging.IImageProvider* imageSource, [out] [retval] Lumia.Imaging.Custom.CustomEffectAdapter** __returnValue);
            }

            [exclusiveto(Lumia.Imaging.Custom.DelegatingEffect)]
            [uuid(7D86E4AA-445A-321C-A82F-86A5283AD540)]
            [version(0x00000001)]
            interface IDelegatingEffect : IInspectable
            {
            }

            [exclusiveto(Lumia.Imaging.Custom.DelegatingEffect)]
            [uuid(4F5F5F4C-48BA-30AA-88AE-E3E74BBAACA4)]
            [version(0x00000001)]
            interface IDelegatingEffectFactory : IInspectable
            {
                [overload("CreateInstance")] HRESULT Create([in] Lumia.Imaging.Custom.ICustomEffect* customEffect, [out] [retval] Lumia.Imaging.Custom.DelegatingEffect** __returnValue);
                [overload("CreateInstance")] HRESULT CreateWithSource([in] Lumia.Imaging.IImageProvider* imageSource, [in] Lumia.Imaging.Custom.ICustomEffect* customEffect, [out] [retval] Lumia.Imaging.Custom.DelegatingEffect** __returnValue);
            }

            [uuid(2923476D-409B-37B3-855F-A349BEE7A252)]
            [version(0x00000001)]
            interface ICustomFilterRequest : IInspectable
            {
                [propget] HRESULT PreferredColorMode([out] [retval] Lumia.Imaging.ColorMode* __returnValue);
                [propget] HRESULT SourceBufferLength([out] [retval] UINT32* __returnValue);
                [propget] HRESULT TargetBufferLength([out] [retval] UINT32* __returnValue);
                [propget] HRESULT ImageSize([out] [retval] Windows.Foundation.Size* __returnValue);
            }

            [uuid(E710C460-7ED7-379F-837D-6D048045F11F)]
            [version(0x00000001)]
            interface ICustomFilterResponse : IInspectable
            {
                [propget] HRESULT ColorMode([out] [retval] Lumia.Imaging.ColorMode* __returnValue);
                [propget] HRESULT SourceBuffer([out] [retval] Windows.Storage.Streams.IBuffer** __returnValue);
                [propget] HRESULT TargetBuffer([out] [retval] Windows.Storage.Streams.IBuffer** __returnValue);
            }

            [uuid(88A51FA5-C028-3DBD-AC50-67041FBEE9C2)]
            [version(0x00000001)]
            interface ICustomFilter : IInspectable
            {
                HRESULT PrepareAsync([out] [retval] Windows.Foundation.IAsyncAction** __returnValue);
                HRESULT BeginProcessing([in] Lumia.Imaging.Custom.ICustomFilterRequest* request, [out] [retval] Lumia.Imaging.Custom.ICustomFilterResponse** __returnValue);
                HRESULT ProcessBlock([in] Lumia.Imaging.Custom.CustomFilterBlockParameters blockParameters);
            }

            [uuid(53F7A6D8-4CFD-31BD-9665-8820A10621B7)]
            [version(0x00000001)]
            interface ICustomFilter2 : IInspectable
                requires
                    Lumia.Imaging.Custom.ICustomFilter
            {
                HRESULT CreateSession([out] [retval] Lumia.Imaging.Custom.ICustomFilterSession** __returnValue);
            }

            [uuid(D6D916C9-B47B-3F56-BE44-02EE093D3551)]
            [version(0x00000001)]
            interface ICustomFilterSession : IInspectable
            {
                HRESULT BeginProcessing([in] Lumia.Imaging.Custom.ICustomFilterRequest* request, [out] [retval] Lumia.Imaging.Custom.ICustomFilterResponse** __returnValue);
                HRESULT ProcessBlock([in] Lumia.Imaging.Custom.CustomFilterBlockParameters blockParameters);
            }

            [exclusiveto(Lumia.Imaging.Custom.CustomFilterAdapter)]
            [uuid(BEB3CD0E-1E9C-3920-8123-AEF91C9D8529)]
            [version(0x00000001)]
            interface ICustomFilterAdapter : IInspectable
            {
                [propget] HRESULT BlockMargins([out] [retval] Lumia.Imaging.Margins* __returnValue);
                [propput] HRESULT BlockMargins([in] Lumia.Imaging.Margins value);
                [propget] HRESULT WrapBorders([out] [retval] boolean* __returnValue);
                [propput] HRESULT WrapBorders([in] boolean value);
            }

            [exclusiveto(Lumia.Imaging.Custom.CustomFilterAdapter)]
            [uuid(9DE7EA13-6AC4-3904-B212-63355B2082AF)]
            [version(0x00000001)]
            interface ICustomFilterAdapterFactory : IInspectable
            {
                [default_overload] [overload("CreateInstance")] HRESULT Create2([in] Lumia.Imaging.Custom.ICustomFilter2* customFilter, [out] [retval] Lumia.Imaging.Custom.CustomFilterAdapter** __returnValue);
                [deprecated("This API is deprecated", deprecate, 0x00000001)] [overload("CreateInstance")] HRESULT Create([in] Lumia.Imaging.Custom.ICustomFilter* customFilter, [out] [retval] Lumia.Imaging.Custom.CustomFilterAdapter** __returnValue);
            }

            [uuid(2A0D0209-0448-3AA3-875D-D5315E44503E)]
            [version(0x00000001)]
            interface ICustomImageSource : IInspectable
            {
                HRESULT LoadAsync([out] [retval] Windows.Foundation.IAsyncAction** __returnValue);
                HRESULT ProvideBuffer([in] Windows.Foundation.Size imageSize, [out] [retval] Windows.Storage.Streams.IBuffer** __returnValue);
                HRESULT Process([in] Windows.Foundation.Rect rect);
            }

            [exclusiveto(Lumia.Imaging.Custom.CustomImageSourceAdapter)]
            [uuid(B24282B2-1451-3A55-A599-A0A413B6A688)]
            [version(0x00000001)]
            interface ICustomImageSourceAdapter : IInspectable
            {
                HRESULT Invalidate();
            }

            [exclusiveto(Lumia.Imaging.Custom.CustomImageSourceAdapter)]
            [uuid(06F73A81-BDD2-3F6C-BDC1-35132629188A)]
            [version(0x00000001)]
            interface ICustomImageSourceAdapterFactory : IInspectable
            {
                [overload("CreateInstance")] HRESULT Create([in] Lumia.Imaging.IImageProvider* outerImageProvider, [in] Lumia.Imaging.Custom.ICustomImageSource* customImageSource, [in] Windows.Foundation.Size size, [out] [retval] Lumia.Imaging.Custom.CustomImageSourceAdapter** __returnValue);
            }

            [exclusiveto(Lumia.Imaging.Custom.DelegatingImageSource)]
            [uuid(ADC093B5-5D11-3710-81B5-264E69DA222C)]
            [version(0x00000001)]
            interface IDelegatingImageSource : IInspectable
            {
                HRESULT Invalidate();
            }

            [exclusiveto(Lumia.Imaging.Custom.DelegatingImageSource)]
            [uuid(AD832A5C-81C7-3D4E-8481-3E4F36528CAE)]
            [version(0x00000001)]
            interface IDelegatingImageSourceFactory : IInspectable
            {
                [overload("CreateInstance")] HRESULT Create([in] Windows.Foundation.Size size, [in] Lumia.Imaging.Custom.ICustomImageSource* customImageSource, [out] [retval] Lumia.Imaging.Custom.DelegatingImageSource** __returnValue);
            }

            [uuid(37FC6B9D-137D-3057-8D7A-A13520B2EC2E)]
            [version(0x00000001)]
            interface IEffectGroup : IInspectable
            {
                HRESULT PrepareGroup([in] Lumia.Imaging.IImageProvider* groupSource, [out] [retval] Lumia.Imaging.IImageProvider** __returnValue);
            }

            [exclusiveto(Lumia.Imaging.Custom.EffectGroupAdapter)]
            [uuid(3DF4ECCE-1865-33C8-BFFC-7B49C2392C81)]
            [version(0x00000001)]
            interface IEffectGroupAdapter : IInspectable
            {
            }

            [exclusiveto(Lumia.Imaging.Custom.EffectGroupAdapter)]
            [uuid(D650909F-E5C4-3CBD-A8A6-D513DB30A2C5)]
            [version(0x00000001)]
            interface IEffectGroupAdapterFactory : IInspectable
            {
                [overload("CreateInstance")] HRESULT Create([in] Lumia.Imaging.IImageProvider* outerImageProvider, [in] Lumia.Imaging.Custom.IEffectGroup* effectGroup, [out] [retval] Lumia.Imaging.Custom.EffectGroupAdapter** __returnValue);
            }

            [exclusiveto(Lumia.Imaging.Custom.DelegatingFilter)]
            [uuid(84D246DE-0F2F-3283-A5DF-F76C4F53C79B)]
            [version(0x00000001)]
            interface IDelegatingFilter : IInspectable
            {
                [propget] HRESULT BlockMargins([out] [retval] Lumia.Imaging.Margins* __returnValue);
                [propput] HRESULT BlockMargins([in] Lumia.Imaging.Margins value);
                [propget] HRESULT WrapBorders([out] [retval] boolean* __returnValue);
                [propput] HRESULT WrapBorders([in] boolean value);
            }

            [exclusiveto(Lumia.Imaging.Custom.DelegatingFilter)]
            [uuid(55D0D8CB-F6C1-3BD9-8F79-4191B8EC7727)]
            [version(0x00000001)]
            interface IDelegatingFilterFactory : IInspectable
            {
                [overload("CreateInstance")] HRESULT Create([in] Lumia.Imaging.Custom.ICustomFilter* customFilter, [out] [retval] Lumia.Imaging.Custom.DelegatingFilter** __returnValue);
            }

            [activatable(Lumia.Imaging.Custom.ICustomEffectAdapterFactory, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass CustomEffectAdapter
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IImageConsumer;
                interface Lumia.Imaging.IImageProvider;
                [default] interface Lumia.Imaging.Custom.ICustomEffectAdapter;
            }

            [activatable(Lumia.Imaging.Custom.IDelegatingEffectFactory, 0x00000001)]
            [deprecated("DelegatingEffect is deprecated, use CustomEffectAdapter instead.", deprecate, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass DelegatingEffect
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IImageConsumer;
                interface Lumia.Imaging.IImageProvider;
                [default] interface Lumia.Imaging.Custom.IDelegatingEffect;
            }

            [activatable(Lumia.Imaging.Custom.ICustomFilterAdapterFactory, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass CustomFilterAdapter
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IFilter;
                [default] interface Lumia.Imaging.Custom.ICustomFilterAdapter;
            }

            [activatable(Lumia.Imaging.Custom.ICustomImageSourceAdapterFactory, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass CustomImageSourceAdapter
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IImageProvider;
                interface Lumia.Imaging.IImageSize;
                [default] interface Lumia.Imaging.Custom.ICustomImageSourceAdapter;
            }

            [activatable(Lumia.Imaging.Custom.IDelegatingImageSourceFactory, 0x00000001)]
            [deprecated("This class is deprecated, use CustomImageSourceAdapter instead.", deprecate, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass DelegatingImageSource
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IImageProvider;
                interface Lumia.Imaging.IImageSize;
                [default] interface Lumia.Imaging.Custom.IDelegatingImageSource;
            }

            [activatable(Lumia.Imaging.Custom.IEffectGroupAdapterFactory, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass EffectGroupAdapter
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IImageConsumer;
                interface Lumia.Imaging.IImageProvider;
                [default] interface Lumia.Imaging.Custom.IEffectGroupAdapter;
            }

            [activatable(Lumia.Imaging.Custom.IDelegatingFilterFactory, 0x00000001)]
            [deprecated("DelegatingFilter is deprecated, use CustomFilterAdapter instead.", deprecate, 0x00000001)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass DelegatingFilter
            {
                interface Windows.Foundation.IClosable;
                interface Lumia.Imaging.IFilter;
                [default] interface Lumia.Imaging.Custom.IDelegatingFilter;
            }
        }
    }
}
