/*
* Copyright (c) 2014 Microsoft Mobile
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
*/

import "inspectable.idl";
import "Windows.Foundation.idl";
import "Lumia.Imaging.idl";
import "Lumia.Imaging.Adjustments.idl";
import "Lumia.Imaging.Custom.idl";

#define COMPONENT_VERSION 1

namespace CustomWRL {

	interface IEmptyCustomFilter;
	runtimeclass EmptyCustomFilter;

	[uuid(E8C727F2-0476-4885-95FB-534B8A0BDDD3), version(COMPONENT_VERSION), exclusiveto(EmptyCustomFilter)]
	interface IEmptyCustomFilter : IInspectable
	{
		// Add filter properties etc.
	}

	[version(COMPONENT_VERSION)]
	[activatable(COMPONENT_VERSION)]
	[marshaling_behavior(agile)]
	[threading(both)]
	runtimeclass EmptyCustomFilter
	{
		[default] interface IEmptyCustomFilter;
		interface Lumia.Imaging.IFilter; 
	}

}
